{"ast":null,"code":"// frontend/src/api.js\nconst BASE_URL = 'http://localhost:5001/api/competitions';\nexport async function fetchCompetitions() {\n  const response = await fetch(BASE_URL);\n  if (!response.ok) {\n    throw new Error('Errore nel recupero delle competizioni');\n  }\n  return response.json();\n}\nexport async function createCompetition(data) {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Errore nella creazione della competizione');\n  }\n  return response.json();\n}\nexport async function getCompetition(id) {\n  const response = await fetch(`${BASE_URL}/${id}`);\n  if (!response.ok) {\n    throw new Error('Competizione non trovata');\n  }\n  return response.json();\n}\nexport async function updateCompetition(id, data) {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Errore nell\\'aggiornamento della competizione');\n  }\n  return response.json();\n}\nexport async function deleteCompetition(id) {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error || 'Errore nell\\'eliminazione della competizione');\n  }\n  return response.json();\n}","map":{"version":3,"names":["BASE_URL","fetchCompetitions","response","fetch","ok","Error","json","createCompetition","data","method","headers","body","JSON","stringify","errorData","error","getCompetition","id","updateCompetition","deleteCompetition"],"sources":["/Users/thepaggetto/WebstormProjects/Boxe_Wizard/boxe-artiumviz/frontend/src/api.js"],"sourcesContent":["// frontend/src/api.js\nconst BASE_URL = 'http://localhost:5001/api/competitions';\n\nexport async function fetchCompetitions() {\n    const response = await fetch(BASE_URL);\n    if (!response.ok) {\n        throw new Error('Errore nel recupero delle competizioni');\n    }\n    return response.json();\n}\n\nexport async function createCompetition(data) {\n    const response = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Errore nella creazione della competizione');\n    }\n    return response.json();\n}\n\nexport async function getCompetition(id) {\n    const response = await fetch(`${BASE_URL}/${id}`);\n    if (!response.ok) {\n        throw new Error('Competizione non trovata');\n    }\n    return response.json();\n}\n\nexport async function updateCompetition(id, data) {\n    const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Errore nell\\'aggiornamento della competizione');\n    }\n    return response.json();\n}\n\nexport async function deleteCompetition(id) {\n    const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE'\n    });\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Errore nell\\'eliminazione della competizione');\n    }\n    return response.json();\n}\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,wCAAwC;AAEzD,OAAO,eAAeC,iBAAiBA,CAAA,EAAG;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;EACtC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;EAC7D;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAeC,iBAAiBA,CAACC,IAAI,EAAE;EAC1C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;IACnCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC7B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMU,SAAS,GAAG,MAAMZ,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAID,KAAK,CAACS,SAAS,CAACC,KAAK,IAAI,2CAA2C,CAAC;EACnF;EACA,OAAOb,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAeU,cAAcA,CAACC,EAAE,EAAE;EACrC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIiB,EAAE,EAAE,CAAC;EACjD,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAeY,iBAAiBA,CAACD,EAAE,EAAET,IAAI,EAAE;EAC9C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIiB,EAAE,EAAE,EAAE;IAC9CR,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC7B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMU,SAAS,GAAG,MAAMZ,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAID,KAAK,CAACS,SAAS,CAACC,KAAK,IAAI,+CAA+C,CAAC;EACvF;EACA,OAAOb,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B;AAEA,OAAO,eAAea,iBAAiBA,CAACF,EAAE,EAAE;EACxC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIiB,EAAE,EAAE,EAAE;IAC9CR,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMU,SAAS,GAAG,MAAMZ,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAM,IAAID,KAAK,CAACS,SAAS,CAACC,KAAK,IAAI,8CAA8C,CAAC;EACtF;EACA,OAAOb,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}